{
  "_args": [
    [
      {
        "raw": "path-proxy@~1.0.0",
        "scope": null,
        "escapedName": "path-proxy",
        "name": "path-proxy",
        "rawSpec": "~1.0.0",
        "spec": ">=1.0.0 <1.1.0",
        "type": "range"
      },
      "/Users/robert-sherling/personal/twitter-lambda/email_lambda/node_modules/mailgun-js"
    ]
  ],
  "_from": "path-proxy@>=1.0.0 <1.1.0",
  "_id": "path-proxy@1.0.0",
  "_inCache": true,
  "_location": "/path-proxy",
  "_npmUser": {
    "name": "jclem",
    "email": "jonathan@jclem.net"
  },
  "_npmVersion": "1.3.21",
  "_phantomChildren": {},
  "_requested": {
    "raw": "path-proxy@~1.0.0",
    "scope": null,
    "escapedName": "path-proxy",
    "name": "path-proxy",
    "rawSpec": "~1.0.0",
    "spec": ">=1.0.0 <1.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/mailgun-js"
  ],
  "_resolved": "https://registry.npmjs.org/path-proxy/-/path-proxy-1.0.0.tgz",
  "_shasum": "18e8a36859fc9d2f1a53b48dee138543c020de5e",
  "_shrinkwrap": null,
  "_spec": "path-proxy@~1.0.0",
  "_where": "/Users/robert-sherling/personal/twitter-lambda/email_lambda/node_modules/mailgun-js",
  "author": {
    "name": "Jonathan Clem"
  },
  "bugs": {
    "url": "https://github.com/jclem/path-proxy/issues"
  },
  "dependencies": {
    "inflection": "~1.3.0"
  },
  "description": "A path proxy object constructor",
  "devDependencies": {
    "jasmine-node": "~1.11.0"
  },
  "directories": {},
  "dist": {
    "shasum": "18e8a36859fc9d2f1a53b48dee138543c020de5e",
    "tarball": "https://registry.npmjs.org/path-proxy/-/path-proxy-1.0.0.tgz"
  },
  "homepage": "https://github.com/jclem/path-proxy",
  "keywords": [
    "node",
    "proxy"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jclem",
      "email": "jonathan@jclem.net"
    }
  ],
  "name": "path-proxy",
  "optionalDependencies": {},
  "readme": "# path-proxy\n\nGiven an group of paths (say, from an API schema), you might need to create a\nset of proxy objects for interacting with those paths. This is the situation I\nfound myself in while working on the [Node client for the Heroku API][heroku_client].\n\nGiven a set of paths and a base constructor function, path-proxy will create a\nnetwork of logical proxy objects based on the paths and attach it to the\nconstructor's prototype.\n\n## Install\n\n```sh\nnpm install path-proxy --save\n```\n\n## Usage\n\n```javascript\nvar pathProxy = require('path-proxy');\n\nfunction ApiClient() {}\n\npathProxy.proxy(ApiClient, [\n  \"/foo\",\n  \"/foo/{id}/bar\"\n]);\n\nvar client = new ApiClient();\nclient.foo(\"qux\").bar();\n```\n\nThis may not appear all that useful—they're mostly just empty functions—until you\nstart mucking around with their prototypes:\n\n```javascript\nvar BarProxy = pathProxy.pathProxy(ApiClient, \"/foo/{id}/bar\");\nBarProxy.prototype.sayHello = function () {\n  console.log(\"hello\");\n};\n\nclient.foo(\"qux\").bar().sayHello(); // Logs \"hello\".\n```\n\nThey also have access to a few useful attributes:\n\n```javascript\nvar baz = client.foo(\"qux\").bar(\"baz\");\nbaz.params;       // [\"qux\", \"baz\"]\nbaz.pathSegments; // [\"foo\", \"qux\", \"bar\", \"baz\"]\nbaz.path;         // \"/foo/qux/bar/baz\"\n```\n\nAnd can access the instance of the base constructor they're based off of:\n\n```javascript\nApiClient.prototype.delete = function (path, callback) {\n  var message = this.name + \" deleted at \" + path;\n  callback(message);\n};\n\nvar client = new ApiClient();\nclient.name = \"Jonathan\";\n\nBarProxy.prototype.delete = function (callback) {\n  this.base.delete(this.path, callback);\n};\n\n// This:\nclient.foo(\"qux\").bar(\"baz\").delete(function (message) {\n  // message == \"Jonathan deleted at /foo/qux/bar/baz\"\n});\n\n// Is equivalent to this:\nclient.delete(\"/foo/qux/bar/baz\", function (message) {\n  // message == \"Jonathan deleted at /foo/qux/bar/baz\"\n});\n```\n\n## Tests\n\npath-proxy uses jasmine-node for tests. To run them:\n\n```sh\n$ npm install\n$ npm test\n```\n\n[heroku_client]: https://github.com/heroku/node-heroku-client\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jclem/path-proxy.git"
  },
  "scripts": {
    "test": "./node_modules/jasmine-node/bin/jasmine-node spec"
  },
  "version": "1.0.0"
}
